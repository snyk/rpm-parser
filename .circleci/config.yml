version: 2.1

defaults: &defaults
  resource_class: small
  docker:
    - image: node:8
  working_directory: ~/rpm-parser

release_defaults: &release_defaults
  resource_class: small
  docker:
    - image: node:10
  working_directory: ~/rpm-parser

commands:
  install_deps:
    description: Install dependencies
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-cache-{{ checksum "package.json" }}
            - v1-npm-cache-
      - run:
          name: Use snyk-main npmjs user
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: v1-npm-cache-{{ checksum "package.json" }}
          paths:
            - ~/.npm
      - persist_to_workspace:
          root: .
          paths:
            - node_modules/
  notify_slack_on_failure:
    steps:
      - run:
          name: Notify Slack on failure
          command: |
            if [[ "$CIRCLE_BRANCH" == "master" ]]; then
              ./.circleci/slack-notify-failure.sh "${CIRCLE_JOB}"
            fi
          when: on_fail

jobs:
  install_dev_deps:
    <<: *defaults
    environment:
      NODE_ENV: development
    steps:
      - install_deps
      - notify_slack_on_failure

  install_prod_deps:
    <<: *defaults
    steps:
      - install_deps
      - notify_slack_on_failure

  lint:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/rpm-parser
      - run:
          name: Lint
          command: npm run lint
      - notify_slack_on_failure

  test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/rpm-parser
      - run:
          name: Run tests
          command: npm run test
      - notify_slack_on_failure

  release:
    <<: *release_defaults
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build
          command: npm run build
      - run:
          name: Release on GitHub
          command: npx semantic-release
      - notify_slack_on_failure

workflows:
  version: 2

  PR_TO_MASTER:
    jobs:
      - install_dev_deps:
          name: Install with devDependencies
          context: nodejs-install
          filters:
            branches:
              ignore:
                - master
      - lint:
          name: Lint
          context: nodejs-install
          requires:
            - Install with devDependencies
          filters:
            branches:
              ignore:
                - master
      - test:
          name: Test
          context: nodejs-install
          requires:
            - Install with devDependencies
          filters:
            branches:
              ignore:
                - master
      - install_prod_deps:
          name: Install PROD deps
          context: nodejs-install
          requires:
            - Test
            - Lint
          filters:
            branches:
              ignore:
                - master

  MERGE_TO_MASTER:
    jobs:
      - install_dev_deps:
          name: Install with devDependencies
          context: nodejs-install
          filters:
            branches:
              only:
                - master
      - lint:
          name: Lint
          context: nodejs-install
          requires:
            - Install with devDependencies
          filters:
            branches:
              only:
                - master
      - test:
          name: Test
          context: nodejs-install
          requires:
            - Install with devDependencies
          filters:
            branches:
              only:
                - master
      - release:
          name: Release to GitHub
          context: nodejs-lib-release
          requires:
            - Install with devDependencies
            - Test
            - Lint
          filters:
            branches:
              only:
                - master
